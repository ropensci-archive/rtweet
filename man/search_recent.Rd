% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_archive.R
\name{search_recent}
\alias{search_recent}
\title{Search recent tweets}
\usage{
search_recent(
  query,
  n = 100,
  expansions = NULL,
  fields = NULL,
  ...,
  token = NULL,
  parse = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{query}{If \code{NULL} returns the current rules, else depending:
\itemize{
\item In stream_add_rule it should be a list of value and tag.
\item In stream_rm_rule it should be a vector of ids of rules to be removed
}}

\item{n}{Number of results to retrieve. Must be <= 100.}

\item{expansions}{Expansions you want to use see \code{\link[=tweet_expansions]{tweet_expansions()}}.
Use NULL to get all expansions, use NA to not use any field, or a vector
with the fields you want.}

\item{fields}{Fields you want to retrieve see \link{Fields}. Use NULL to get all
allowed fields, use NA to not use any field, pass a list with the fields you want.}

\item{...}{Other parameters passed to the body of the request.}

\item{token}{Expert use only. Use this to override authentication for
a single API call. In most cases you are better off changing the
default for all calls. See \code{\link[=auth_as]{auth_as()}} for details.}

\item{parse}{If \code{TRUE}, the default, returns a tidy data frame. Use \code{FALSE}
to return the "raw" list corresponding to the JSON returned from the
Twitter API.}

\item{verbose}{A logical value to provide more information about paginated queries.}
}
\description{
Search recent tweets
}
\examples{
# sr <- search_recent("#rtweet", parse = FALSE)
}
\references{
\url{https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-recent}
}
